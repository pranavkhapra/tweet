{"version":3,"sources":["base.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","images/loading.svg","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","loadingImage","ReactDOM","render","document","getElementById"],"mappings":"0PAcAA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGV,IAAMC,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCyDxBC,EAnEE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,OAGeJ,oBAAS,GAHxB,mBAGdK,EAHc,KAGFC,EAHE,OAIKN,mBAAS,IAJd,mBAIdO,EAJc,KAIPC,EAJO,KAKfC,EAAW,SAACC,GAAW,IAAD,EAGtBA,EADFC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAKEZ,EAAYwB,+BACvBhB,EACAE,GAPS,OAKXe,EALW,+CAUEzB,EAAY0B,2BAA2BlB,EAAOE,GAVhD,QAUXe,EAVW,eAYbE,QAAQC,IAAIH,GAZC,kDAcbV,EAAS,KAAMc,SAdF,0DAAH,sDAkBd,OACE,qCACE,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACE,uBACEX,KAAK,QACLY,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRb,MAAOZ,EACPQ,SAAUA,EACVc,UAAU,cAEZ,uBACEX,KAAK,WACLY,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRb,MAAOV,EACPoB,UAAU,YACVd,SAAUA,IAEZ,uBACEe,KAAK,SACLD,UAAU,uBACVV,MAAOR,EAAa,iBAAmB,YAExCE,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAEzC,sBAAMoB,QA7BY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MA6BnBL,UAAU,aAAxC,SACGlB,EAAa,UAAY,uBC1BnBwB,EAjCF,WACX,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAKP,YAHDH,EACRF,EADFC,OAAUC,MAIVmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACnB,WAATpB,IACTmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBARnB,SAUdxC,EAAYyC,gBAAgBH,GAVd,2CAAH,sDAYnB,OACE,sBAAKR,UAAU,gBAAf,UACE,cAAC,IAAD,CACEY,KAAMC,IACNC,MAAM,UACNC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACE,yBAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMM,SAE9C,yBAAQd,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBCqCvCC,EAlED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACT7C,oBAAS,GADA,mBAChC8C,EADgC,KACvBC,EADuB,OAEP/C,mBAAS4C,EAASI,MAFX,mBAEhCC,EAFgC,KAEtBC,EAFsB,KAGjCC,EAAa,uCAAG,sBAAApC,EAAA,0DACTqC,OAAOC,QAAQ,+CADN,gCAGZ1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAH3B,uBAIZ3D,EAAe4D,WAAWb,EAASc,eAAeF,SAJtC,2CAAH,qDAObG,EAAgB,kBAAMZ,GAAW,SAACnB,GAAD,OAAWA,MAC5Cd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAETrB,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAClDZ,KAAMC,IAHO,OAKfF,GAAW,GALI,2CAAH,sDAad,OACE,qBAAKxB,UAAU,QAAf,SACGuB,EACC,qCACE,uBAAMhC,SAAUA,EAAUS,UAAU,sBAApC,UACE,uBACEC,KAAK,OACLC,YAAY,kBACZZ,MAAOoC,EACPvB,UAAQ,EACRmC,WAAS,EACTpD,SAjBK,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZqC,EAAYrC,IAcFU,UAAU,cAEZ,uBAAOC,KAAK,SAASX,MAAM,eAAeU,UAAU,eAEtD,sBAAMI,QAASgC,EAAepC,UAAU,oBAAxC,uBAKF,qCACE,6BAAKqB,EAASI,OACbJ,EAASc,eACR,qBAAKI,IAAKlB,EAASc,cAAeK,IAAI,eAEvClB,GACC,sBAAKtB,UAAU,iBAAf,UACE,sBAAMI,QAASwB,EAAf,SACE,cAAC,IAAD,CAAiBhB,KAAM6B,QAEzB,sBAAMrC,QAASgC,EAAf,SACE,cAAC,IAAD,CAAiBxB,KAAM8B,iB,QCoCxBC,EA3FM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACVnE,mBAAS,IADC,mBAC7BoE,EAD6B,KACtBC,EADsB,OAEArE,mBAAS,IAFT,mBAE7BsE,EAF6B,KAEjBC,EAFiB,KAG9BzD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACD,KAAVqD,EADW,oDAIf1D,EAAMM,iBACF0C,EAAgB,GACD,KAAfY,EANW,wBAOPE,EAAgB3E,EACnB4E,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,gBATd,SAUUJ,EAAcK,UAAUP,EAAY,YAV9C,cAUPQ,EAVO,iBAWSA,EAASL,IAAIM,iBAXtB,QAWbrB,EAXa,sBAaTd,EAAW,CACfI,KAAMoB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBjB,iBAjBa,UAmBT/D,EAAUyF,WAAW,UAAUC,IAAIzC,GAnB1B,QAoBfyB,EAAS,IACTE,EAAc,IArBC,4CAAH,sDA4Cd,OACE,uBAAMzD,SAAUA,EAAUS,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVV,MAAOuD,EACP3D,SA3BS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZwD,EAASxD,IAwBHW,KAAK,OACLC,YAAY,uBACZ6D,UAAW,MAEb,uBAAO9D,KAAK,SAASX,MAAM,SAASU,UAAU,2BAEhD,wBAAOgE,QAAQ,cAAchE,UAAU,sBAAvC,UACE,8CACA,cAAC,IAAD,CAAiBY,KAAMqD,SAEzB,uBACEjC,GAAG,cACH/B,KAAK,OACLiE,OAAO,UACPhF,SApCe,SAACC,GAAW,IAIzBgF,EADFhF,EADFC,OAAUgF,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnBzB,EAAcyB,IAEhBJ,EAAOM,cAAcR,IAyBjBnD,MAAO,CACL4D,QAAS,KAGZ7B,GACC,sBAAK/C,UAAU,0BAAf,UACE,qBACEuC,IAAKQ,EACL/B,MAAO,CACL6D,gBAAiB9B,GAEnBP,IAAI,eAEN,sBAAKxC,UAAU,qBAAqBI,QApClB,kBAAM4C,EAAc,KAoCtC,UACE,0CACA,cAAC,IAAD,CAAiBpC,KAAMkE,gBC9DpBC,EA1BF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QAAc,EACAnE,mBAAS,IADT,mBACrBuG,EADqB,KACbC,EADa,KAW5B,OATAC,qBAAU,WACR9G,EAAUyF,WAAW,UAAUsB,YAAW,SAACC,GACzC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACxD,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAIpC,WAETsF,EAAUI,QAEX,IAED,sBAAKrF,UAAU,YAAf,UACE,cAAC,EAAD,CAAc4C,QAASA,IACvB,qBAAK5B,MAAO,CAAEwE,UAAW,IAAzB,SACGR,EAAOO,KAAI,SAAC1C,GAAD,OACV,cAAC,EAAD,CAEExB,SAAUwB,EACVvB,QAASuB,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMb,aCkCRyD,MAjDf,YAA4C,IAAzBC,EAAwB,EAAxBA,YAAa9C,EAAW,EAAXA,QACxB+C,EAAUC,cADyB,EAEGnH,mBAASmE,EAAQiD,aAFpB,mBAElCC,EAFkC,KAElBC,EAFkB,KAanCxG,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACFmD,EAAQiD,cAAgBC,EAFb,gCAGPlD,EAAQoD,cAAc,CAC1BH,YAAaC,IAJF,OAMbJ,IANa,2CAAH,sDASd,OACE,sBAAK1F,UAAU,YAAf,UACE,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACE,uBACEd,SAnBS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZyG,EAAkBzG,IAgBZW,KAAK,OACLqC,WAAS,EACTpC,YAAY,eACZZ,MAAOwG,EACP9F,UAAU,cAEZ,uBACEC,KAAK,SACLX,MAAM,iBACNU,UAAU,UACVgB,MAAO,CACLwE,UAAW,SAIjB,sBAAMxF,UAAU,2BAA2BI,QAvCzB,WACpBlC,EAAY+H,UACZN,EAAQO,KAAK,MAqCX,yBCbSC,EA9BI,SAAC,GAAD,IAAGvD,EAAH,EAAGA,QAAH,OACjB,8BACE,qBAAI5B,MAAO,CAAEoF,QAAS,OAAQC,eAAgB,SAAUb,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMc,GAAG,IAAItF,MAAO,CAAEuF,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiB3F,KAAMC,IAAWC,MAAM,UAAUC,KAAK,WAG3D,6BACE,eAAC,IAAD,CACEuF,GAAG,WACHtF,MAAO,CACLwF,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiB/F,KAAMgG,IAAQ9F,MAAM,UAAUC,KAAK,OACpD,sBAAMC,MAAO,CAAEwE,UAAW,IAA1B,SACG5C,EAAQiD,YAAR,UACMjD,EAAQiD,YADd,kBAEG,uBCUDgB,EAhCG,SAAC,GAAD,IAAGnB,EAAH,EAAGA,YAAaoB,EAAhB,EAAgBA,WAAYlE,EAA5B,EAA4BA,QAA5B,OAChB,eAAC,IAAD,WACGkE,GAAc,cAAC,EAAD,CAAYlE,QAASA,IACpC,cAAC,IAAD,UACGkE,EACC,sBACE9F,MAAO,CACL+F,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRzB,UAAW,GACXY,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMvE,QAASA,MAEjB,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASvE,QAASA,EAAS8C,YAAaA,SAI5C,mCACE,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,cCjCG,MAA0B,oCC+C1BC,MA1Cf,WAAgB,IAAD,EACW3I,oBAAS,GADpB,mBACN4I,EADM,KACAC,EADA,OAEiB7I,mBAAS,MAF1B,mBAENmE,EAFM,KAEG2E,EAFH,KAyBb,OAtBArC,qBAAU,WACRhH,EAAYsJ,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACT5B,YAAa4B,EAAK5B,YAClBzC,IAAKqE,EAAKrE,IACV4C,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,KAGnC,MAEbJ,GAAQ,QAET,IAUD,mCACGD,EACC,cAAC,EAAD,CACE3B,YAZY,WAClB,IAAM+B,EAAOvJ,EAAYyJ,YACzBJ,EAAW,CACT1B,YAAa4B,EAAK5B,YAClBzC,IAAKqE,EAAKrE,IACV4C,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,OAQxCZ,WAAYc,QAAQhF,GACpBA,QAASA,IAGX,mCACE,qBAAKL,IAAKsF,EAAcrF,IAAI,iBCnCtCsF,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d08712be.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCYXNrgSOKES-ASlEj1MCKUBp5lFZ7vWME',\n  authDomain: 'tweet-843ae.firebaseapp.com',\n  projectId: 'tweet-843ae',\n  storageBucket: 'tweet-843ae.appspot.com',\n  messagingSenderId: '968749188940',\n  appId: '1:968749188940:web:962a3a81e24d0ab16531e9',\n  measurementId: 'G-41EZ985W1F',\n};\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport { authService } from '../base';\n\n// eslint-disable-next-line no-unused-vars\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? 'Create Account' : 'Sign In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport { authService, firebaseInstance } from '../base';\nimport AuthForm from '../components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color=\"#04AAFF\"\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-autofocus */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { dbService, storageService } from '../base';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"attachment\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { storageService, dbService } from '../base';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const onSubmit = async (event) => {\n    if (nweet === '') {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment('');\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"attachment\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport { dbService, storageService } from '../base';\nimport Nweet from '../components/Nweet';\nimport NweetFactory from '../components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection('nweets').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/no-autofocus */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService } from '../base';\n\nfunction Profile({ refreshUser, userObj }) {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n}\n\nexport default Profile;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color=\"#04AAFF\" size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color=\"#04AAFF\" size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : 'Profile'}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => (\n  <Router>\n    {isLoggedIn && <Navigation userObj={userObj} />}\n    <Switch>\n      {isLoggedIn ? (\n        <div\n          style={{\n            maxWidth: 890,\n            width: '100%',\n            margin: '0 auto',\n            marginTop: 80,\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <Route exact path=\"/\">\n            <Home userObj={userObj} />\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile userObj={userObj} refreshUser={refreshUser} />\n          </Route>\n        </div>\n      ) : (\n        <>\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        </>\n      )}\n    </Switch>\n  </Router>\n);\nexport default AppRouter;\n","export default __webpack_public_path__ + \"static/media/loading.eb5a887a.svg\";","import React, { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport { authService } from '../base';\nimport loadingImage from '../images/loading.svg';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <>\n          <img src={loadingImage} alt=\"loading\" />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}